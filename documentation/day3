בהמשך לאתמול הגרר במהירות 2.5 מטר לשנייה כאשר ממוצע המיהירות הוא רק מול הבניין הוערך ל- 9.59e-05 ניוטון. הפונקצייה calc_vel_and_drag_from_data_Cd מסוגלת להוציא את כל המידע הדרוש מקבצי הjson השמורים.

הערה חשובה עבור יום 2. כדי לחשב את הגרר עם הנוסחה של מקדם הגרר צריך את הצפיפות. הצפיפות של האוויר נלקחה מהטבלה בויקיפדיה במאמר על צפיפות אוויר באנגלית. השורה בטבלה ממנה נלקחה הצפיפות היא של 25 מעלות צלזיוס והצפיפות הינה: 1.2041 קילוגרם למטר בשלישית. לינק: https://en.wikipedia.org/wiki/Density_of_air#Temperature_and_pressure


לאחר חישובים של מאמץ הריינולדס יצא כי הם שליליות. זאת מיכייון שהריצפה "שואבת" תנע לתוכה ולכן תנועת האוויר בציר Z היא שלילית (למטה).

דברים על יום שתיים:
כיצד מסיגים מהירות ממוצעת על פי גובה ומשם את הגרר על פי CD? מריצים את:
group_avarage_velocity(data, lambda t, i: group_by_height(t, i, 0, 0, 0))
כאשר הDATA היא פעם אחת higher ופעם אחת lower ושומרים את התוצאות. (את האפסים יש להחליף בכל מספרים הגיוניים שממזערים את הכמות חלקיקים ב no group).
לאחר זאת מחברים את שני התוצאות (שנמצאות במילונים) בעזרת הפקודה:
merge_dict(file1, file2, lambda a, b: [((np.array(a[0]) * a[1] + np.array(b[0]) * b[1]) / (a[1] + b[1])).tolist(), a[1] + b[1]])
חשוב להוסיף פרמטר שיתעלם מהקובץ של higher. (או ignore_1 או ignore_2).
זה נותן מילון חדש עם המהירויות על פי גובה (חשוב לעשות את אותו תהליך עבור 2.5 מט"ש ו4.0 מט"ש).
שומרים את המילון ומריצים את:
calc_vel_and_drag_from_data_Cd
כאשר הDATA הוא המילון והAREA זה השטח פנים של כל חתך במטרים בריבוע. במקרה שלנו שטח הפנים הוא 0.01*0.05 מטר בריבוע.
הפונקצייה הזאת תציג את כל המידע הרלוונטי על המהירויות ועל הגרר.

כיצד מחשבים את מאמצי הריינולדס:
הערה - התהליך זהה ל2.5 מט"ש ו4.0 מט"ש.
תחילה מריצים את הפקודה:
group_avarage_velocity(ft.Scene("/home/ron/Desktop/Alexey/the_dataset/traj_2.5_high.h5"), group_by_location)
פעם לhigher ופעם לlower. (בדוגמה המיהירות היא 2.5 מט"ש אבל היא יכולה להיות גם 4.0 מט"ש)
מחברים את שני המילונים בעזרת:
merge_dict(file1, file2, lambda a, b: [((np.array(a[0]) * a[1] + np.array(b[0]) * b[1]) / (a[1] + b[1])).tolist(), a[1] + b[1]])
ולא מתעלמים מאף קובץ.
לאחר מכאן, פעם עבור lower ופעם עבור higher מריצים:
get_reynolds_stress(data, avg_vel_by_loc)
כאשר avg_vel_by_loc זה המילון שיצרנו מקודם וDATA זה SCENE.
משלבים את שני המילונים עם מאמצי הריינולדס כך:
merge_dict(file1, file2, lambda a, b: [(a[0] * a[1] + b[0] * b[1]) / (a[1] + b[1]), a[1] + b[1]])
וזהו. (auto_rey_stress_calculator עושה הכל לבד)
